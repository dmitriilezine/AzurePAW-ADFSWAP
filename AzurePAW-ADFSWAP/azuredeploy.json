{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {

    "domainName": {
      "type": "string",
      "metadata": {
        "description": "Current deployment supports top level domain name only, for example contoso.com, fabrikam.com etc"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the Administrator of the new VMs and Domain"
      },
      "defaultValue": "labadmin"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the Administrator account of the new VMs and Domain. If you do not change it, then it will look like this: Subscription#SUBSCRIPTIONID"
      },
      "defaultValue": "[concat('Subscription#',subscription().subscriptionId)]"
    },
    "adfsSVCname": {
      "type": "string",
      "metadata": {
        "description": "The name of the ADFS Service Account"
      },
      "defaultValue": "adfs-svc"
    },
    "adfsSVCPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the ADFS Service account"
      }
    },
    "existingVirtualNetworkName": {
      "type": "string",
      "defaultValue": "Add existing vNet Name where this deployment will be deployed to",
      "metadata": {
        "description": "Specify the name for the vNet to whcih this server will be deployed."
      }
    },
    "existingVirtualNetworkResourceGroup": {
      "type": "string",
      "defaultValue": "Add vNet RG Name",
      "metadata": {
        "description": "Name of the existing VNET resource group"
      }
    },
    "WAPSubnetName": {
      "type": "string",
      "defaultValue": "Add Subnet Name where WAP will be deployed in vNet -> WAP...",
      "metadata": {
        "description": "Name of the subnet in the virtual network you want to put this VM"
      }
    },
    "subscriptionID": {
      "type": "string",
      "metadata": {
        "description": "Subscription ID is used to provide access path to the Key Vault with secrets to access deployment scripts"
      },
      "defaultValue": "Subscription ID for Secrets Key Vault that provide access to the deployment scripts."
    },
    "secretsVaultName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Key Vault where secrets are stored"
      }
    },
    "secretsKeyVaultRG": {
      "type": "string",
      "metadata": {
        "description": "The name of the RG where Secrets Key Vault is stored"
      }
    },
    "ADFSCertID": {
      "type": "string",
      "metadata": {
        "description": "ADFS Cert to be deployed to WAP VMs. Certificate container and id from the AKV, for example mycertcontainer/453l4k5j3lk45jk235jl3k5j34 "
      },
      "defaultValue": "Replace with your mycertcontainer/453l4k5j3lk45jk235jl3k5j34."
    },
    "ADFSServiceCert": {
      "type": "string",
      "metadata": {
        "description": "Subject name of the external cert for ADFS. This must match the subject from the cert in the ADFSCertID "
      },
      "defaultValue": "Replace with your fs.contoso.com ADFS cert subject name"
    },
    "VirtualMachineSize": {
      "type": "string",
      "allowedValues": [
        "Standard_DS12_v2",
        "Standard_DS2_v2",
        "Standard_D8S_v3",
        "Standard_A2"
      ],
      "metadata": {
        "description": "VM Size. The bigger it is, the more $ you will spend."
      },
      "defaultValue": "Standard_DS2_v2"
    },
    "wap1VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "WAP1-LAB"
    },
    "wap2VMName": {
      "type": "string",
      "metadata": {
        "description": "Must be compliant with Windows Server naming convention"
      },
      "defaultValue": "WAP2-LAB"
    },
    "wapVM1IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP Address for WAP VM 1"
      },
      "defaultValue": "10.0.6.4"
    },
    "wapVM2IPAddress": {
      "type": "string",
      "metadata": {
        "description": "IP Address for WAP VM 2"
      },
      "defaultValue": "10.0.6.5"
    },
    "ILBforWAP": {
      "type": "string",
      "metadata": {
        "description": "IP Address for WAP farm ILB"
      },
      "defaultValue": "10.0.6.100"
    },
    "ScriptsLocation": {
      "type": "string",
      "metadata": {
        "description": "Storage account URL for scripts"
      },
      "defaultValue": "https://azurepaw.blob.core.windows.net"
    },
    "diagnosticsStorageAccountName": {
      "type": "string",
      "defaultValue": "RealStorageAccountName",
      "metadata": {
        "description": "Specify storage account that will be used for VM diagnostics"
      }
    },
    "StorageAccountRG": {
      "type": "string",
      "defaultValue": "RG where Storage account is located",
      "metadata": {
        "description": "Specify storage account RG"
      }
    },
    "adeKeyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Key Vault Name used for Azure Disk Encryption for this VM. Must be in the same region as this VM"
      }
    },
    "adeKeyVaultResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "ADE Key Vault RG"
      }
    }
  },
  "variables": {
    "assetLocation": "https://raw.githubusercontent.com/dmitriilezine/AzurePAW-ADFSWAP/master/AzurePAW-ADFSWAP",
    "assetLocationStorageAccount": "[parameters('ScriptsLocation')]",
    "VMSize": "[parameters('VirtualMachineSize')]",
    "OSVersion": "2016-Datacenter",

    "wapSsubnetID": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('WAPSubnetName'))]",

    "WAPIpAddress": "[parameters('wapVM1IPAddress')]",
    "WAP2IpAddress": "[parameters('wapVM2IPAddress')]",

    "ilbWAPprivateIPAddress": "[parameters('ILBforWAP')]",

    "ilbTemplateURL": "[concat(variables('assetLocation'),'/data/ilbDeployment.json')]",
    "wapVMTemplateURL": "[concat(variables('assetLocation'),'/data/wapVm.json')]",
    "wapFarmTemplateURL": "[concat(variables('assetLocation'),'/data/wapfarm.json')]",
    "vmDiagnosticsTemplateURL": "[concat(variables('assetLocation'),'/data/vmDiagnostics.json')]",
    "vmAntimalwareTemplateURL": "[concat(variables('assetLocation'),'/data/deployAntimalware.json')]",
    "vmADETemplateURL": "[concat(variables('assetLocation'),'/data/encryptVM.json')]",

    "wapVMName": "[parameters('wap1VMName')]",
    "wapVM2Name": "[parameters('wap2VMName')]",

    "deployILBforWAP": "DeployILBforWAP",
    "deployILBforWAPId": "[concat('Microsoft.Resources/deployments/', variables('deployILBforWAP'))]",

    "wapVmDeployment": "CreateWAPVM1",
    "wapVmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('wapVmDeployment'))]",
    "wapVm2Deployment": "CreateWAPVM2",
    "wapVm2DeploymentId": "[concat('Microsoft.Resources/deployments/', variables('wapVm2Deployment'))]",

    "wapFarmDeployment": "DeployWAPFarm",
    "wapFarmDeploymentId": "[concat('Microsoft.Resources/deployments/', variables('wapFarmDeployment'))]",
    "wapFarmDeploymentonVM2": "DeployWAPFarmonVM2",
    "wapFarmDeploymentonVM2Id": "[concat('Microsoft.Resources/deployments/', variables('wapFarmDeploymentonVM2'))]",

    "deployVMDiagnosticsWAP1": "deployVMDiagnosticsWAP1",
    "deployVMDiagnosticsWAP1Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsWAP1'))]",
    "deployVMDiagnosticsWAP2": "deployVMDiagnosticsWAP2",
    "deployVMDiagnosticsWAP2Id": "[concat('Microsoft.Resources/deployments/', variables('deployVMDiagnosticsWAP2'))]",

    "deployAntimalwareWAP1": "deployAntimalwareWAP1",
    "deployAntimalwareWAP1Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareWAP1'))]",
    "deployAntimalwareWAP2": "deployAntimalwareWAP2",
    "deployAntimalwareWAP2Id": "[concat('Microsoft.Resources/deployments/', variables('deployAntimalwareWAP2'))]",

    "encryptWAP1": "encryptWAP1",
    "encryptWAP1Id": "[concat('Microsoft.Resources/deployments/', variables('encryptWAP1'))]",
    "encryptWAP2": "encryptWAP2",
    "encryptWAP2Id": "[concat('Microsoft.Resources/deployments/', variables('encryptWAP2'))]",

    "shortDomainName": "[split(parameters('domainName'),'.')[0]]",
    "domainSuffix": "[split(parameters('domainName'),'.')[1]]",
    "ouPathT0Devices": "[concat('OU=T0-Devices; OU=Tier 0; OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathAdmin": "[concat('OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathHGS": "[concat('OU=T0-HGS; OU=T0-Servers; OU=Tier 0; OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathT0Idenity": "[concat('OU=T0-Identity; OU=T0-Servers; OU=Tier 0; OU=Admin;', 'DC=',variables('shortDomainName'),'; DC=',variables('domainSuffix'))]",
    "ouPathNone": "",

    "configurationFunctionDSC": "DeployADFS.ps1\\InstallWebApplicationProxy",

    "secretsVaultName": "[parameters('secretsVaultName')]",
    "secretName": "AzurePAWPOC1SAKey2",
    "secretnameSASurl": "AzurePAWPOC1SAS",
    "secretsKeyVaultRG": "[parameters('secretsKeyVaultRG')]",
    "secretskeyVaultID": "[concat('/subscriptions/', parameters('subscriptionID'), '/resourceGroups/', variables('secretsKeyVaultRG'), '/providers/Microsoft.KeyVault/vaults/', variables('secretsVaultName'))]",
    "CertForADFS": "[concat('https://', parameters('secretsVaultName'), '.vault.azure.net:443/secrets/', parameters('ADFSCertID'))]",

    "wapAvailabilitySetName": "wapAvailabiltySet",

    "imageOffer": "WindowsServer",
    "imagePublisher": "MicrosoftWindowsServer",

    "ilbWAPName": "[concat('ilbWAP-',resourceGroup().name)]",
    "ilbWAPID": "[resourceId('Microsoft.Network/loadBalancers',variables('ilbWAPName'))]",

    "wapNICName": "[concat('WAP-Nic',resourceGroup().name)]",
    "wap2NICName": "[concat('WAP2-Nic',resourceGroup().name)]",

    "diagnosticsAccountid": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/',parameters('StorageAccountRG'), '/providers/','Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"

  },
  "resources": [
    {
      "name": "[variables('wapAvailabilitySetName')]",
      "type": "Microsoft.Compute/availabilitySets",
      "apiVersion": "2017-03-30",
      "location": "[resourceGroup().location]",
      "properties": {
        "PlatformUpdateDomainCount": 3,
        "PlatformFaultDomainCount": 2
      },
      "sku": {
        "name": "Aligned"
      }
    },

    {
      "name": "[variables('deployILBforWAP')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": { "uri": "[variables('ilbTemplateURL')]" },
        "parameters": {
          "ilbName": { "value": "[variables('ilbWAPName')]" },
          "subnetResourceID": { "value": "[variables('wapSsubnetID')]" },
          "ilbPrivateIPAddress": { "value": "[variables('ilbWAPprivateIPAddress')]" }
        }
      }
    },

    {
      "comments": "Deploy WAP VM 1",
      "name": "[variables('wapVmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets',variables('wapAvailabilitySetName'))]",
        "[variables('deployILBforWAP')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('wapVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('wapSsubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('wapVMName')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('wapNICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('WAPIpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('wapAvailabilitySetName')]"
          },
          "keyVaultID": {
            "value": "[variables('secretskeyVaultID')]"
          },
          "CertForADFS": {
            "value": "[variables('CertForADFS')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "ilbID": {
            "value": "[variables('ilbWAPID')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          }
        }
      }
    },
    {
      "comments": "Deploy WAP VM 2",
      "name": "[variables('wapVm2Deployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets',variables('wapAvailabilitySetName'))]",
        "[variables('deployILBforWAP')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('wapVMTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "subnetResourceID": {
            "value": "[variables('wapSsubnetID')]"
          },
          "windowsImageSKU": {
            "value": "[variables('OSVersion')]"
          },
          "vmName": {
            "value": "[variables('wapVM2Name')]"
          },
          "vmSize": {
            "value": "[variables('VMSize')]"
          },
          "NicName": {
            "value": "[variables('wap2NICName')]"
          },
          "primaryIpAddress": {
            "value": "[variables('WAP2IpAddress')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "availabilitySetName": {
            "value": "[variables('wapAvailabilitySetName')]"
          },
          "keyVaultID": {
            "value": "[variables('secretskeyVaultID')]"
          },
          "CertForADFS": {
            "value": "[variables('CertForADFS')]"
          },
          "ouPath": {
            "value": "[variables('ouPathAdmin')]"
          },
          "ilbID": {
            "value": "[variables('ilbWAPID')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          }
        }
      }
    },

    {
      "comments": "Install WAP Role on VM1",
      "name": "[variables('wapFarmDeployment')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('wapVmDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('wapFarmTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adfsVMName": {
            "value": "[variables('wapVMName')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adfsSVCname": {
            "value": "[parameters('adfsSVCname')]"
          },
          "adfsSVCPassword": {
            "value": "[parameters('adfsSVCPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "configurationFunction": {
            "value": "[variables('configurationFunctionDSC')]"
          },
          "ADFSServiceCert": {
            "value": "[parameters('ADFSServiceCert')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretskeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretskeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "comments": "Deploy WAP Role on VM2",
      "name": "[variables('wapFarmDeploymentonVM2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('wapVm2Deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('wapFarmTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "adfsVMName": {
            "value": "[variables('wapVM2Name')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "adfsSVCname": {
            "value": "[parameters('adfsSVCname')]"
          },
          "adfsSVCPassword": {
            "value": "[parameters('adfsSVCPassword')]"
          },
          "assetLocationStorageAccount": {
            "value": "[variables('assetLocationStorageAccount')]"
          },
          "configurationFunction": {
            "value": "[variables('configurationFunctionDSC')]"
          },
          "ADFSServiceCert": {
            "value": "[parameters('ADFSServiceCert')]"
          },
          "storageAccountKeyviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretskeyVaultID')]"
              },
              "secretName": "[variables('secretName')]"
            }
          },
          "storageAccountSASTokenviaKeyvault": {
            "reference": {
              "keyVault": {
                "id": "[variables('secretskeyVaultID')]"
              },
              "secretName": "[variables('secretnameSASurl')]"
            }
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsWAP1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('wapVmDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('wapVMName')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsAccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployVMDiagnosticsWAP2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('wapVm2Deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmDiagnosticsTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('wapVM2Name')]"
          },
          "diagnosticsStorageAccountName": {
            "value": "[parameters('diagnosticsStorageAccountName')]"
          },
          "accountid": {
            "value": "[variables('diagnosticsAccountid')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareWAP1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('wapVmDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('wapVMName')]"
          }
        }
      }
    },
    {
      "name": "[variables('deployAntimalwareWAP2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('wapVm2Deployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmAntimalwareTemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('wapVM2Name')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptWAP1')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('wapFarmDeployment')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('wapVMName')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    },
    {
      "name": "[variables('encryptWAP2')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('wapFarmDeploymentonVM2')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmADETemplateURL')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('wapVM2Name')]"
          },
          "adeKeyVaultName": {
            "value": "[parameters('adeKeyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[parameters('adeKeyVaultResourceGroup')]"
          }
        }
      }
    }
  ],
  "outputs": {}
}
